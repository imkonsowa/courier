// Code generated by protoc-gen-go. DO NOT EDIT.
// source: courierpb/courier.proto

package courierpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Parcel struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Weight               float32  `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Country              string   `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parcel) Reset()         { *m = Parcel{} }
func (m *Parcel) String() string { return proto.CompactTextString(m) }
func (*Parcel) ProtoMessage()    {}
func (*Parcel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ecf8b3b5b64d761, []int{0}
}

func (m *Parcel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parcel.Unmarshal(m, b)
}
func (m *Parcel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parcel.Marshal(b, m, deterministic)
}
func (m *Parcel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parcel.Merge(m, src)
}
func (m *Parcel) XXX_Size() int {
	return xxx_messageInfo_Parcel.Size(m)
}
func (m *Parcel) XXX_DiscardUnknown() {
	xxx_messageInfo_Parcel.DiscardUnknown(m)
}

var xxx_messageInfo_Parcel proto.InternalMessageInfo

func (m *Parcel) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Parcel) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Parcel) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Parcel) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Parcel) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type ProcessParcelsRequest struct {
	Date                 string    `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Parcels              []*Parcel `protobuf:"bytes,2,rep,name=parcels,proto3" json:"parcels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProcessParcelsRequest) Reset()         { *m = ProcessParcelsRequest{} }
func (m *ProcessParcelsRequest) String() string { return proto.CompactTextString(m) }
func (*ProcessParcelsRequest) ProtoMessage()    {}
func (*ProcessParcelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ecf8b3b5b64d761, []int{1}
}

func (m *ProcessParcelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessParcelsRequest.Unmarshal(m, b)
}
func (m *ProcessParcelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessParcelsRequest.Marshal(b, m, deterministic)
}
func (m *ProcessParcelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessParcelsRequest.Merge(m, src)
}
func (m *ProcessParcelsRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessParcelsRequest.Size(m)
}
func (m *ProcessParcelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessParcelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessParcelsRequest proto.InternalMessageInfo

func (m *ProcessParcelsRequest) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *ProcessParcelsRequest) GetParcels() []*Parcel {
	if m != nil {
		return m.Parcels
	}
	return nil
}

type ProcessParcelsResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessParcelsResponse) Reset()         { *m = ProcessParcelsResponse{} }
func (m *ProcessParcelsResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessParcelsResponse) ProtoMessage()    {}
func (*ProcessParcelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ecf8b3b5b64d761, []int{2}
}

func (m *ProcessParcelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessParcelsResponse.Unmarshal(m, b)
}
func (m *ProcessParcelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessParcelsResponse.Marshal(b, m, deterministic)
}
func (m *ProcessParcelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessParcelsResponse.Merge(m, src)
}
func (m *ProcessParcelsResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessParcelsResponse.Size(m)
}
func (m *ProcessParcelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessParcelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessParcelsResponse proto.InternalMessageInfo

func (m *ProcessParcelsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Parcel)(nil), "courierpb.Parcel")
	proto.RegisterType((*ProcessParcelsRequest)(nil), "courierpb.ProcessParcelsRequest")
	proto.RegisterType((*ProcessParcelsResponse)(nil), "courierpb.ProcessParcelsResponse")
}

func init() {
	proto.RegisterFile("courierpb/courier.proto", fileDescriptor_5ecf8b3b5b64d761)
}

var fileDescriptor_5ecf8b3b5b64d761 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xff, 0x69, 0xb7, 0x8e, 0xde, 0x3f, 0x14, 0xbc, 0xe8, 0x0c, 0x3e, 0xd5, 0x3e, 0x15,
	0x84, 0x2a, 0xf5, 0x23, 0xe8, 0xab, 0x30, 0xe2, 0x8b, 0xe0, 0x53, 0x97, 0x5d, 0xb6, 0xc0, 0xd6,
	0xc4, 0x24, 0x9d, 0xf8, 0xed, 0x65, 0xc9, 0x3a, 0x54, 0xc4, 0xb7, 0xfb, 0xbb, 0x39, 0x39, 0xe7,
	0x84, 0xc0, 0xa5, 0xd4, 0x83, 0x55, 0x64, 0xcd, 0xf2, 0xf6, 0x38, 0x35, 0xc6, 0x6a, 0xaf, 0x31,
	0x3f, 0x1d, 0x54, 0x7b, 0xc8, 0x16, 0x9d, 0x95, 0xb4, 0xc5, 0x02, 0x12, 0xb5, 0xe2, 0xac, 0x64,
	0x75, 0x2a, 0x12, 0xb5, 0xc2, 0x73, 0x98, 0xd2, 0xae, 0x53, 0x5b, 0x9e, 0x94, 0xac, 0xce, 0x45,
	0x84, 0xc3, 0xd6, 0x6c, 0x74, 0x4f, 0x3c, 0x8d, 0xdb, 0x00, 0x38, 0x87, 0xec, 0x9d, 0xd4, 0x7a,
	0xe3, 0xf9, 0xa4, 0x64, 0x75, 0x22, 0x8e, 0x84, 0x1c, 0x66, 0x52, 0x0f, 0xbd, 0xb7, 0x1f, 0x7c,
	0x1a, 0xf4, 0x23, 0x56, 0x2f, 0x70, 0xb1, 0xb0, 0x5a, 0x92, 0x73, 0x31, 0xde, 0x09, 0x7a, 0x1b,
	0xc8, 0x79, 0x44, 0x98, 0x3c, 0x76, 0x9e, 0x42, 0x91, 0x5c, 0x84, 0x19, 0x6f, 0x60, 0x66, 0xa2,
	0x8a, 0x27, 0x65, 0x5a, 0xff, 0x6f, 0xcf, 0x9a, 0xd3, 0x0b, 0x9a, 0x78, 0x5f, 0x8c, 0x8a, 0xaa,
	0x85, 0xf9, 0x4f, 0x67, 0x67, 0x74, 0xef, 0xe8, 0xd0, 0xe6, 0x89, 0x9c, 0xeb, 0xd6, 0xa3, 0xfb,
	0x88, 0xed, 0x0e, 0x8a, 0x87, 0x68, 0xf8, 0x4c, 0x76, 0xaf, 0x24, 0xe1, 0x2b, 0x14, 0xdf, 0x5d,
	0xb0, 0xfc, 0x9a, 0xf9, 0x5b, 0xf5, 0xab, 0xeb, 0x3f, 0x14, 0xb1, 0x42, 0xf5, 0xaf, 0x66, 0x77,
	0x6c, 0x99, 0x85, 0x6f, 0xb8, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x4b, 0x67, 0xac, 0xa1,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CourierServiceClient is the client API for CourierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourierServiceClient interface {
	ProcessParcels(ctx context.Context, opts ...grpc.CallOption) (CourierService_ProcessParcelsClient, error)
}

type courierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCourierServiceClient(cc grpc.ClientConnInterface) CourierServiceClient {
	return &courierServiceClient{cc}
}

func (c *courierServiceClient) ProcessParcels(ctx context.Context, opts ...grpc.CallOption) (CourierService_ProcessParcelsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CourierService_serviceDesc.Streams[0], "/courierpb.CourierService/ProcessParcels", opts...)
	if err != nil {
		return nil, err
	}
	x := &courierServiceProcessParcelsClient{stream}
	return x, nil
}

type CourierService_ProcessParcelsClient interface {
	Send(*ProcessParcelsRequest) error
	Recv() (*ProcessParcelsResponse, error)
	grpc.ClientStream
}

type courierServiceProcessParcelsClient struct {
	grpc.ClientStream
}

func (x *courierServiceProcessParcelsClient) Send(m *ProcessParcelsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *courierServiceProcessParcelsClient) Recv() (*ProcessParcelsResponse, error) {
	m := new(ProcessParcelsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CourierServiceServer is the server API for CourierService service.
type CourierServiceServer interface {
	ProcessParcels(CourierService_ProcessParcelsServer) error
}

// UnimplementedCourierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCourierServiceServer struct {
}

func (*UnimplementedCourierServiceServer) ProcessParcels(srv CourierService_ProcessParcelsServer) error {
	return status.Errorf(codes.Unimplemented, "method ProcessParcels not implemented")
}

func RegisterCourierServiceServer(s *grpc.Server, srv CourierServiceServer) {
	s.RegisterService(&_CourierService_serviceDesc, srv)
}

func _CourierService_ProcessParcels_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CourierServiceServer).ProcessParcels(&courierServiceProcessParcelsServer{stream})
}

type CourierService_ProcessParcelsServer interface {
	Send(*ProcessParcelsResponse) error
	Recv() (*ProcessParcelsRequest, error)
	grpc.ServerStream
}

type courierServiceProcessParcelsServer struct {
	grpc.ServerStream
}

func (x *courierServiceProcessParcelsServer) Send(m *ProcessParcelsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *courierServiceProcessParcelsServer) Recv() (*ProcessParcelsRequest, error) {
	m := new(ProcessParcelsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CourierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "courierpb.CourierService",
	HandlerType: (*CourierServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProcessParcels",
			Handler:       _CourierService_ProcessParcels_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "courierpb/courier.proto",
}
